webpackJsonp([12],{"3XUN":function(a,t,n){"use strict";var e=function(){var a=this,t=a.$createElement,n=a._self._c||t;return n("div",{directives:[{name:"container",rawName:"v-container"}]},[n("h1",[a._v("Buttons")]),n("p",[a._v("\n\n  There are two kinds of buttons in Clean-UI: \n  "),n("a-link",{attrs:{href:"#common-buttons"}},[a._v("Common Buttons")]),a._v(", \n  "),n("a-link",{attrs:{href:"#flat-buttons"}},[a._v("Flat Buttons")]),a._v(", and   \n  "),n("a-link",{attrs:{href:"#raised-buttons"}},[a._v("Raised Buttons")]),a._v(".    \n  \n  All of them allow the following variants:        \n  \n  ")],1),n("h3",[a._v("Events")]),n("a-table",[n("thead",[n("tr",[n("td",[a._v("This component has no events")])])])]),n("h3",[a._v("Properties")]),n("a-table",[n("thead",[n("tr",[n("td",[a._v("Property")]),n("td",[a._v("Description")]),n("td",[a._v("Type of data")])])]),n("tbody",[n("tr",[n("td",[a._v("variant")]),n("td",[a._v("Defines the style. See examples")]),n("td",[a._v("String")])])])]),n("p",[a._v("\n      The variant changes the color of the button, but not the behavior or the size. The colors come from the \n      colors in the theme.\n  ")]),n("h2",{attrs:{id:"common-buttons"}},[a._v("Common buttons")]),n("h3",[a._v("Example 1")]),n("p",[a._v("Simple buttons only require text. For example,")]),n("textarea",{directives:[{name:"verbatim",rawName:"v-verbatim"}]},[a._v("      <a-button :variant=\"'primary'\">Primary</a-button>\n      <a-button :variant=\"'accent'\">Accent</a-button>\n      <a-button :variant=\"'warn'\">Warn</a-button>\n      <a-button :variant=\"'basic'\">Basic</a-button>\n      <a-button :variant=\"'disabled'\">Disabled</a-button> \n  ")]),n("p",[a._v("Leads to ")]),n("div",{staticClass:"example-content"},[n("a-button",{attrs:{variant:"primary"}},[a._v("Primary")]),n("a-button",{attrs:{variant:"accent"}},[a._v("Accent")]),n("a-button",{attrs:{variant:"warn"}},[a._v("Warn")]),n("a-button",{attrs:{variant:"basic"}},[a._v("Basic")]),n("a-button",{attrs:{variant:"disabled"}},[a._v("Disabled")])],1),n("h3",[a._v("Example 2")]),n("p",[a._v("But buttons may also have icons. In such case, it is recommended to use\n      a Material Design icon and a span with the text. For example,\n  ")]),n("textarea",{directives:[{name:"verbatim",rawName:"v-verbatim"}],staticStyle:{height:"200px"}},[a._v('      <a-button :variant="\'primary\'">\n          <i class="material-icons">close</i>\n          <span> CLOSE</span>\n      </a-button>\n      <a-button :variant="\'accent\'">\n          <i class="material-icons">menu</i>\n          <span> MENU</span>\n      </a-button>\n      <a-button :variant="\'warn\'">\n          <i class="material-icons">account_box</i>\n          <span> Log In</span>\n      </a-button>\n  ')]),n("p",[a._v("Leads to ")]),n("div",{staticClass:"example-content"},[n("a-button",{attrs:{variant:"primary"}},[n("i",{staticClass:"material-icons"},[a._v("close")]),n("span",[a._v(" CLOSE")])]),n("a-button",{attrs:{variant:"accent"}},[n("i",{staticClass:"material-icons"},[a._v("menu")]),n("span",[a._v(" MENU")])]),n("a-button",{attrs:{variant:"warn"}},[n("i",{staticClass:"material-icons"},[a._v("account_box")]),n("span",[a._v(" Log In")])])],1),n("h2",{attrs:{id:"flat-buttons"}},[a._v("Flat buttons")]),n("p",[a._v("\n      Inspired in Material Design, flat buttons are meant to represent the secondary actions in dialogs. \n      They are supposed to offer the user some 'other' options, but that are not supposed to be the obvious\n      choice (i.e. close).\n  ")]),n("h3",[a._v("Example 1")]),n("p",[a._v("The following html")]),n("textarea",{directives:[{name:"verbatim",rawName:"v-verbatim"}]},[a._v("      <a-flat-button :variant=\"'primary'\">Primary</a-flat-button>\n      <a-flat-button :variant=\"'accent'\">Accent</a-flat-button>\n      <a-flat-button :variant=\"'warn'\">Warn</a-flat-button>\n      <a-flat-button :variant=\"'basic'\">Basic</a-flat-button>\n      <a-flat-button :variant=\"'disabled'\">Disabled</a-flat-button>    \n  ")]),n("p",[a._v("Leads to ")]),n("div",{staticClass:"example-content"},[n("a-flat-button",{attrs:{variant:"primary"}},[a._v("Primary")]),n("a-flat-button",{attrs:{variant:"accent"}},[a._v("Accent")]),n("a-flat-button",{attrs:{variant:"warn"}},[a._v("Warn")]),n("a-flat-button",{attrs:{variant:"basic"}},[a._v("Basic")]),n("a-flat-button",{attrs:{variant:"disabled"}},[a._v("Disabled")])],1),n("h3",[a._v("Example 2")]),n("p",[a._v("\n      Link buttons may also have icons. In such case, it is recommended to use\n      a Material Design icon and a span with the text. For example,\n  ")]),n("textarea",{directives:[{name:"verbatim",rawName:"v-verbatim"}],staticStyle:{height:"200px"}},[a._v('      <a-flat-button :variant="\'primary\'">\n          <i class="material-icons">close</i>\n          <span> CLOSE</span>\n      </a-flat-button>\n      <a-flat-button :variant="\'accent\'">\n          <i class="material-icons">menu</i>\n          <span> MENU</span>\n      </a-flat-button>\n      <a-flat-button :variant="\'warn\'">\n          <i class="material-icons">account_box</i>\n          <span> Log In</span>\n      </a-flat-button>\n  ')]),n("p",[a._v("Leads to ")]),n("div",{staticClass:"example-content"},[n("a-flat-button",{attrs:{variant:"primary"}},[n("i",{staticClass:"material-icons"},[a._v("close")]),n("span",[a._v(" CLOSE")])]),n("a-flat-button",{attrs:{variant:"accent"}},[n("i",{staticClass:"material-icons"},[a._v("menu")]),n("span",[a._v(" MENU")])]),n("a-flat-button",{attrs:{variant:"warn"}},[n("i",{staticClass:"material-icons"},[a._v("account_box")]),n("span",[a._v(" Log In")])])],1),n("h2",{attrs:{id:"raised-buttons"}},[a._v("Raised buttons")]),n("p",[a._v("\n      Inspired in Material Design, raised buttons are meant to represent the main button in a dialog. \n      They are supposed to attract the user's attention more than link and normal buttons, and offer \n      access to the main action (i.e. submit, send, accept).\n  ")]),n("h3",[a._v("Example 1")]),n("p",[a._v("The following html")]),n("textarea",{directives:[{name:"verbatim",rawName:"v-verbatim"}]},[a._v("      <a-raised-button :variant=\"'primary'\">Primary</a-raised-button>\n      <a-raised-button :variant=\"'accent'\">Accent</a-raised-button>\n      <a-raised-button :variant=\"'warn'\">Warn</a-raised-button>\n      <a-raised-button :variant=\"'basic'\">Basic</a-raised-button>\n      <a-raised-button :variant=\"'disabled'\">Disabled</a-raised-button>    \n  ")]),n("p",[a._v("Leads to ")]),n("div",{staticClass:"example-content"},[n("a-raised-button",{attrs:{variant:"primary"}},[a._v("Primary")]),n("a-raised-button",{attrs:{variant:"accent"}},[a._v("Accent")]),n("a-raised-button",{attrs:{variant:"warn"}},[a._v("Warn")]),n("a-raised-button",{attrs:{variant:"basic"}},[a._v("Basic")]),n("a-raised-button",{attrs:{variant:"disabled"}},[a._v("Disabled")])],1),n("h3",[a._v("Example 2")]),n("p",[a._v("Raised buttons may also have icons. In such case, it is recommended to use\n      a Material Design icon and a span with the text. For example,\n  ")]),n("textarea",{directives:[{name:"verbatim",rawName:"v-verbatim"}],staticStyle:{height:"200px"}},[a._v('      <a-raised-button :variant="\'primary\'">\n          <i class="material-icons">close</i>\n          <span> CLOSE</span>\n      </a-raised-button>\n      <a-raised-button :variant="\'accent\'">\n          <i class="material-icons">menu</i>\n          <span> MENU</span>\n      </a-raised-button>\n      <a-raised-button :variant="\'warn\'">\n          <i class="material-icons">account_box</i>\n          <span> Log In</span>\n      </a-raised-button>\n  ')]),n("p",[a._v("Leads to ")]),n("div",{staticClass:"example-content"},[n("a-raised-button",{attrs:{variant:"primary"}},[n("i",{staticClass:"material-icons"},[a._v("close")]),n("span",[a._v(" CLOSE")])]),n("a-raised-button",{attrs:{variant:"accent"}},[n("i",{staticClass:"material-icons"},[a._v("menu")]),n("span",[a._v(" MENU")])]),n("a-raised-button",{attrs:{variant:"warn"}},[n("i",{staticClass:"material-icons"},[a._v("account_box")]),n("span",[a._v(" Log In")])])],1)],1)};e._withStripped=!0;var i={render:e,staticRenderFns:[]};t.a=i},"9/WN":function(a,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var e=n("3XUN"),i=n("VU/8")(null,e.a,!1,null,null,null);i.options.__file="pages/buttons.vue",t.default=i.exports}});